{{/* Backend HPA configuration with Spring Boot metrics */}}
{{- if .Values.backend.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "umbrella.fullname" . }}-backend
  labels:
    {{- include "umbrella.labels" . | nindent 4 }}
  annotations:
    spring-boot.version: "3.2.x"
    spring-boot.java.version: "21"
    spring-boot.virtual-threads.enabled: "true"
    spring-boot.tomcat.version: "10.1.18"
    autoscaling.policy: |
      {
        "stabilization": {
          "scaleUp": "60s",
          "scaleDown": "300s"
        },
        "behavior": {
          "scaleUp": "gradual",
          "scaleDown": "conservative"
        }
      }
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "umbrella.fullname" . }}-backend
  minReplicas: {{ .Values.backend.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.backend.autoscaling.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.backend.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.backend.autoscaling.targetMemoryUtilizationPercentage }}
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120
      selectPolicy: Min
---
{{- end }}

{{/* Web frontend HPA configuration */}}
{{- if .Values.web.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "umbrella.fullname" . }}-web
  labels:
    {{- include "umbrella.labels" . | nindent 4 }}
  annotations:
    autoscaling.policy: |
      {
        "stabilization": {
          "scaleUp": "30s",
          "scaleDown": "300s"
        },
        "behavior": {
          "scaleUp": "aggressive",
          "scaleDown": "conservative"
        }
      }
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "umbrella.fullname" . }}-web
  minReplicas: {{ .Values.web.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.web.autoscaling.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.web.autoscaling.targetCPUUtilizationPercentage }}
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120
      selectPolicy: Min
{{- end }}