name: Release Umbrella Application

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 1.2.0)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false
  push:
    tags:
      - 'v*.*.*'

env:
  HARBOR_REGISTRY: harbor.prcins.net
  RELEASE_PREFIX: v
  CONTAINER_PLATFORMS: linux/amd64,linux/arm64
  SPRING_BOOT_VERSION: 3.2.1
  JAVA_VERSION: '21'
  SPRING_PROFILES_ACTIVE: container

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.validate-version.outputs.version }}
      tag: ${{ steps.create-tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate version format
        id: validate-version
        run: |
          VERSION=${{ github.event.inputs.version }}
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Must be x.y.z"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Verify Java and Spring Boot compatibility
        run: |
          grep "java.version>21<" src/backend/pom.xml || exit 1
          grep "spring-boot.version>3.2" src/backend/pom.xml || exit 1
          grep "jakarta." src/backend/pom.xml || exit 1

      - name: Create release tag
        id: create-tag
        run: |
          TAG="${RELEASE_PREFIX}${{ steps.validate-version.outputs.version }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

  tag-containers:
    name: Tag and Push Container Images
    needs: prepare-release
    runs-on: ubuntu-latest
    outputs:
      backend-digest: ${{ steps.push-backend.outputs.digest }}
      frontend-digest: ${{ steps.push-frontend.outputs.digest }}
    steps:
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.HARBOR_REGISTRY }}/umbrella/backend
            ${{ env.HARBOR_REGISTRY }}/umbrella/web
          tags: |
            type=semver,pattern={{version}},value=${{ needs.prepare-release.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.prepare-release.outputs.version }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push backend image
        id: push-backend
        uses: docker/build-push-action@v5
        with:
          context: src/backend
          platforms: ${{ env.CONTAINER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            JAVA_VERSION=${{ env.JAVA_VERSION }}
            SPRING_BOOT_VERSION=${{ env.SPRING_BOOT_VERSION }}
            SPRING_PROFILES_ACTIVE=${{ env.SPRING_PROFILES_ACTIVE }}

      - name: Build and push frontend image
        id: push-frontend
        uses: docker/build-push-action@v5
        with:
          context: src/web
          platforms: ${{ env.CONTAINER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Verify container health
        run: |
          docker pull ${{ env.HARBOR_REGISTRY }}/umbrella/backend:${{ needs.prepare-release.outputs.version }}
          docker run --rm ${{ env.HARBOR_REGISTRY }}/umbrella/backend:${{ needs.prepare-release.outputs.version }} curl -f http://localhost:8080/actuator/health

  publish-release:
    name: Publish Release
    needs: [prepare-release, tag-containers]
    runs-on: ubuntu-latest
    steps:
      - name: Generate release notes
        id: release-notes
        run: |
          cat << EOF > release-notes.md
          ## Umbrella Application Release ${{ needs.prepare-release.outputs.version }}

          ### Container Images
          - Backend: \`${{ env.HARBOR_REGISTRY }}/umbrella/backend:${{ needs.prepare-release.outputs.version }}\`
            - Digest: \`${{ needs.tag-containers.outputs.backend-digest }}\`
          - Frontend: \`${{ env.HARBOR_REGISTRY }}/umbrella/web:${{ needs.prepare-release.outputs.version }}\`
            - Digest: \`${{ needs.tag-containers.outputs.frontend-digest }}\`

          ### Runtime Requirements
          - Java ${{ env.JAVA_VERSION }}
          - Spring Boot ${{ env.SPRING_BOOT_VERSION }}
          - Jakarta EE APIs (javax.* to jakarta.* migration)

          ### Health Check Endpoints
          - Backend: \`/actuator/health\`
          - Liveness: \`/actuator/health/liveness\`
          - Readiness: \`/actuator/health/readiness\`
          EOF

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.prepare-release.outputs.tag }}
          release_name: Release ${{ needs.prepare-release.outputs.version }}
          body_path: release-notes.md
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}

      - name: Verify release artifacts
        run: |
          curl -f https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ needs.prepare-release.outputs.tag }}