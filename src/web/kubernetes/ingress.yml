apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: umbrella-web-ingress
  namespace: umbrella
  labels:
    app: umbrella-web
    environment: ${ENV}
    version: 1.0.0
    managed-by: kubernetes
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
    
    # Proxy configuration
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    
    # Security headers configuration
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    
    # TLS certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Monitoring configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "9113"
    prometheus.io/scheme: "http"
    
    # Distributed tracing
    jaeger-collector.io/inject-trace-context: "true"

spec:
  # TLS configuration
  tls:
  - hosts:
    - umbrella.prcins.net
    secretName: umbrella-web-tls
  
  # Routing rules
  rules:
  - host: umbrella.prcins.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: umbrella-web-service
            port:
              number: 80