apiVersion: apps/v1
kind: Deployment
metadata:
  name: umbrella-backend
  namespace: umbrella
  labels:
    app: umbrella-backend
    tier: backend
    version: "3.2"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: umbrella-backend
  template:
    metadata:
      labels:
        app: umbrella-backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8081"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: umbrella-backend
        image: harbor.prcins.net/umbrella/backend:${VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: actuator
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "2Gi"
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: SPRING_CONFIG_LOCATION
          value: "file:/config/application.yml"
        - name: JAVA_OPTS
          value: "-XX:+UseZGC -XX:+ZGenerational -Xmx1536m -Xms1024m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Dspring.threads.virtual.enabled=true"
        volumeMounts:
        - name: config-volume
          mountPath: /config
          readOnly: true
        - name: secrets-volume
          mountPath: /secrets
          readOnly: true
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: actuator
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: actuator
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: actuator
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 30
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
      volumes:
      - name: config-volume
        configMap:
          name: umbrella-backend-config
      - name: secrets-volume
        secret:
          secretName: umbrella-secrets
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - umbrella-backend
              topologyKey: kubernetes.io/hostname